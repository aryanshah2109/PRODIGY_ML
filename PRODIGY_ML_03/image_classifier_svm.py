# -*- coding: utf-8 -*-
"""PRODIGY_ML_03.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1q46wAVE_CPPYt1wuMrWc2WYe6xgt4GiB
"""

!mkdir -p ~/.kaggle
!cp kaggle.json ~/.kaggle/

import kagglehub

path = kagglehub.dataset_download("shaunthesheep/microsoft-catsvsdogs-dataset")

print("Path to dataset files:", path)

!cp -r /kaggle/input/microsoft-catsvsdogs-dataset  /content/

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

import os
import cv2
from sklearn.model_selection import train_test_split, GridSearchCV
from sklearn.preprocessing import StandardScaler
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score

data_dir = 'microsoft-catsvsdogs-dataset/PetImages'
img_size = 64  # Resize to 64x64

X, y = [], []
max_images = 1000  # Or even 500 for quick runs

for label, folder in enumerate(['cat', 'dog']):
    path = os.path.join(data_dir, folder)
    count = 0
    for img_name in os.listdir(path):
        if count >= max_images:
            break
        img = cv2.imread(os.path.join(path, img_name), cv2.IMREAD_GRAYSCALE)
        if img is not None:
            img = cv2.resize(img, (img_size, img_size))
            X.append(img.flatten())
            y.append(label)
            count += 1

X = np.array(X)
y = np.array(y)

# scaling
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

X_train,X_test,y_train,y_test = train_test_split(X_scaled,y,test_size=0.2,random_state=43)

X_train[0]

# model
svc = SVC()
params = {
    'C': [1, 10],
    'kernel': ['linear', 'rbf'],
    'gamma': ['scale']
}
model = GridSearchCV(svc,param_grid = params,scoring='accuracy',cv=5)

model.fit(X_train,y_train)

model.best_params_

accuracy = accuracy_score(y_test,model.predict(X_test))
print(f'{accuracy*100}% accuracy')

